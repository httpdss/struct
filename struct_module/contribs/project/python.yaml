structure:
  - .editorconfig:
      content: |
        # Editor configuration
        root = true

        [*]
        indent_style = space
        indent_size = 2
        end_of_line = lf
        charset = utf-8
        trim_trailing_whitespace = true
        insert_final_newline = true
  - .env:
      content: |
        # Environment variables
  - .env.example:
      content: |
        # Environment variables
  - .gitignore:
      content: |
        # Ignore files generated by the app
        .env
        .venv
  - setup.py:
      content: |
        from setuptools import setup, find_packages

        setup(
          name='python-app',
          version='0.1.0',
          packages=find_packages(),
          install_requires=[
            # 'flask',
          ],
        )
  - setup.cfg:
      content: |
        [metadata]
        name = python-app
        version = 0.1.0
        description = A python app
        long_description = file: README.md
        long_description_content_type = text/markdown
        author = Your Name
        author_email =
  - pyproject.toml:
      content: |
        [build-system]
        requires = ["setuptools", "wheel"]
        build-backend = "setuptools.build_meta"
  - Makefile:
      content: |
        .PHONY: init test install
        test:
          python -m unittest discover -s tests

        init:
          # if .venv is present, activate it
          if [ -d .venv ]; then
            . .venv/bin/activate
          fi

          # if .venv is not present, create it and install dependencies
          if [ ! -d .venv ]; then
            python3 -m venv .venv
            . .venv/bin/activate && pip install -r requirements.txt
          fi

        install:
          # if .venv is not present, create it and install dependencies
          if [ ! -d .venv ]; then
            python3 -m venv .venv
            . .venv/bin/activate && pip install -r requirements.txt
          fi
  - MANIFEST.in:
      content: |
        include LICENSE
        include README.md
  - requirements.txt:
      content: |
        # Python dependencies
  - LICENSE:
      file: https://raw.githubusercontent.com/httpdss/struct/main/LICENSE
  - README.md:
      content: |
        # Generic App

        ## Introduction

        This is a generic app that can be used as a template for new projects.

        ## Contribute

        If you would like to contribute to this project, please follow the guidelines in the [CONTRIBUTING.md](.github/CONTRIBUTING.md) file.

        ## License

        This project is licensed under the terms of the [Apache 2.0](LICENSE) license.
  - docs/REMOVE_ME.md:
      content: |
        # docs Folder

        The documentation folder
  - tests/REMOVE_ME.md:
      content: |
        # test Folder

        Unit tests, integration testsâ€¦ go here.
  - tests/__init__.py:
      content: |
        # Test suite
  - tests/test_module1.py:
      content: |
        import unittest

        class TestModule1(unittest.TestCase):
          def test_something(self):
            self.assertEqual(True, True)
  - tests/test_module2.py:
      content: |
        import unittest

        class TestModule2(unittest.TestCase):
          def test_something_else(self):
            self.assertEqual(False, False)
  - src/python-app/__init__.py:
      content: ""
  - src/python-app/module1.py:
      content: |
        def function1():
          return True
  - src/python-app/module2.py:
      content: |
        def function2():
          return False
